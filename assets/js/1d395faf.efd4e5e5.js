"use strict";(self.webpackChunkfirebolt_documentation=self.webpackChunkfirebolt_documentation||[]).push([[5074],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=l,k=d["".concat(s,".").concat(m)]||d[m]||c[m]||r;return n?a.createElement(k,o(o({ref:t},u),{},{components:n})):a.createElement(k,o({ref:t},u))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1332:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var a=n(7462),l=n(3366),r=(n(7294),n(3905)),o=["components"],i={title:"SecondScreen"},s="SecondScreen Module",p={unversionedId:"api/SecondScreen",id:"version-0.6.0-alpha.1/api/SecondScreen",title:"SecondScreen",description:"---",source:"@site/versioned_docs/version-0.6.0-alpha.1/api/SecondScreen.md",sourceDirName:"api",slug:"/api/SecondScreen",permalink:"/firebolt-documentation/docs/0.6.0-alpha.1/api/SecondScreen",draft:!1,tags:[],version:"0.6.0-alpha.1",frontMatter:{title:"SecondScreen"},sidebar:"api",previous:{title:"Profile",permalink:"/firebolt-documentation/docs/0.6.0-alpha.1/api/Profile"},next:{title:"Firebolt Core SDK",permalink:"/firebolt-documentation/docs/0.6.0-alpha.1/api/"}},u={},c=[{value:"OpenRPC",id:"openrpc",level:2},{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Usage",id:"usage",level:2},{value:"Overview",id:"overview",level:2},{value:"Events",id:"events",level:2},{value:"launchRequest",id:"launchrequest",level:3},{value:"Event value",id:"event-value",level:4},{value:"Promise Resolution",id:"promise-resolution",level:4},{value:"Examples",id:"examples",level:4},{value:"Default Example",id:"default-example",level:5},{value:"Listen to an event only once",id:"listen-to-an-event-only-once",level:5},{value:"Clear all listeners for an event",id:"clear-all-listeners-for-an-event",level:5},{value:"closeRequest",id:"closerequest",level:3},{value:"Event value",id:"event-value-1",level:4},{value:"Promise Resolution",id:"promise-resolution-1",level:4},{value:"Examples",id:"examples-1",level:4},{value:"Default Example",id:"default-example-1",level:5},{value:"Listen to an event only once",id:"listen-to-an-event-only-once-1",level:5},{value:"Clear all listeners for an event",id:"clear-all-listeners-for-an-event-1",level:5},{value:"Methods",id:"methods",level:2},{value:"protocols",id:"protocols",level:3},{value:"Promise Resolution",id:"promise-resolution-2",level:4},{value:"Examples",id:"examples-2",level:4},{value:"Default Example",id:"default-example-2",level:5},{value:"Request",id:"request",level:6},{value:"Response",id:"response",level:6},{value:"device",id:"device",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Promise Resolution",id:"promise-resolution-3",level:4},{value:"Examples",id:"examples-3",level:4},{value:"Default Example",id:"default-example-3",level:5},{value:"Request",id:"request-1",level:6},{value:"Response",id:"response-1",level:6},{value:"friendlyName",id:"friendlyname",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Promise Resolution",id:"promise-resolution-4",level:4},{value:"Examples",id:"examples-4",level:4},{value:"Default Example",id:"default-example-4",level:5},{value:"Request",id:"request-2",level:6},{value:"Response",id:"response-2",level:6}],d={toc:c};function m(e){var t=e.components,n=(0,l.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"secondscreen-module"},"SecondScreen Module"),(0,r.kt)("hr",null),(0,r.kt)("p",null,"Version 0.6.0-alpha.1"),(0,r.kt)("h2",{id:"openrpc"},"OpenRPC"),(0,r.kt)("p",null,"This document was generated from an OpenRPC JSON-Schema, and is intended to provide a human readable overview and examples of the methods contained in the module."),(0,r.kt)("p",null,"For the full schema, see the link below."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Schema"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/rdkcentral/firebolt-core-sdk/blob/main/src/modules/secondscreen.json"},"secondscreen.json"))))),(0,r.kt)("h2",{id:"table-of-contents"},"Table of Contents"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#usage"},"Usage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#overview"},"Overview")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#events"},"Events"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#aunchrequest"},"launchRequest")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#loserequest"},"closeRequest")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#methods"},"Methods"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#protocols"},"protocols")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#device"},"device")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#friendlyname"},"friendlyName")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#schemas"},"Schemas"),(0,r.kt)("span",null))),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"To use the SecondScreen module, you can import it into your project from the Firebolt SDK:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { SecondScreen } from '@firebolt-js/sdk'\n")),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Methods for communicating with second screen devices"),(0,r.kt)("h2",{id:"events"},"Events"),(0,r.kt)("h3",{id:"launchrequest"},"launchRequest"),(0,r.kt)("p",null,"Listen to the launchRequest event"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// listen to launchRequest\nSecondScreen.listen('launchRequest', (data: SecondScreenEvent) => void): Promise<bigint>\n\n// listen to launchRequest once\nSecondScreen.once('launchRequest', (data: SecondScreenEvent) => void): Promise<bigint>\n\n// clear a listener\nSecondScreen.clear(listenerId?: bigint): void\n\n")),(0,r.kt)("h4",{id:"event-value"},"Event value"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"../schemas/secondscreen#/definitions/secondscreenevent"},(0,r.kt)("inlineCode",{parentName:"a"},"SecondScreenEvent"))),(0,r.kt)("td",{parentName:"tr",align:null},"An a message notification from a second screen device")))),(0,r.kt)("h4",{id:"promise-resolution"},"Promise Resolution"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bigint")),(0,r.kt)("td",{parentName:"tr",align:null},"Listener ID to clear() the callback method and stop receiving the event, e.g. ",(0,r.kt)("inlineCode",{parentName:"td"},"SecondScreen.clear(id)"))))),(0,r.kt)("h4",{id:"examples"},"Examples"),(0,r.kt)("h5",{id:"default-example"},"Default Example"),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"JavaScript")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { SecondScreen } from '@firebolt-js/sdk'\n\nSecondScreen.listen('launchRequest', launchRequestEvent => {\n  console.log(launchRequestEvent)\n})\n")),(0,r.kt)("p",null,"Value of ",(0,r.kt)("inlineCode",{parentName:"p"},"launchRequestEvent")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "dial",\n  "version": "1.7",\n  "data": "{\\"code\\":\\"AQDPQZiQcb3KQ7gY7yy5tHTMbbkGHR9Zjp-KL53H3eKBZIeAt7O9UKYPu6B21l2UZVmIqkFXDXBmXvK4g2e3EgZtjMNmKPsTltgnRl95DImtOXjSpWtTjSaOkW4w1kZKUTwLKdwVWTzBVH8ERHorvLU6vCGOVHxXt65LNwdl5HKRweShVC1V9QsyvRnQS61ov0UclmrH_xZML2Bt-Q-rZFjey5MjwupIb4x4f53XUJMhjHpDHoIUKrjpdPDQvK2a\\",\\"friendlyName\\":\\"Operator_TX061AEI\\",\\"UDN\\":\\"608fef11-2800-482a-962b-23a6690c93c1\\"}"\n}\n'))),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"JSON-RPC")),(0,r.kt)("h6",null,"Request"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "method": "secondscreen.onLaunchRequest",\n  "params": {\n    "listen": true\n  }\n}\n')),(0,r.kt)("h6",null,"Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "result": {\n    "type": "dial",\n    "version": "1.7",\n    "data": "{\\"code\\":\\"AQDPQZiQcb3KQ7gY7yy5tHTMbbkGHR9Zjp-KL53H3eKBZIeAt7O9UKYPu6B21l2UZVmIqkFXDXBmXvK4g2e3EgZtjMNmKPsTltgnRl95DImtOXjSpWtTjSaOkW4w1kZKUTwLKdwVWTzBVH8ERHorvLU6vCGOVHxXt65LNwdl5HKRweShVC1V9QsyvRnQS61ov0UclmrH_xZML2Bt-Q-rZFjey5MjwupIb4x4f53XUJMhjHpDHoIUKrjpdPDQvK2a\\",\\"friendlyName\\":\\"Operator_TX061AEI\\",\\"UDN\\":\\"608fef11-2800-482a-962b-23a6690c93c1\\"}"\n  }\n}\n'))),(0,r.kt)("h5",{id:"listen-to-an-event-only-once"},"Listen to an event only once"),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"JavaScript")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"SecondScreen.listen('launchRequest', (value) => {\n  console.log(value)\n}).then( (listenerId) => {\n  SecondScreen.clear(listenerId)\n})\n")),(0,r.kt)("p",null,"Alternately, simply call ",(0,r.kt)("inlineCode",{parentName:"p"},"once()"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"SecondScreen.once('launchRequest', (value) => {\n  console.log(value)\n})\n"))),(0,r.kt)("h5",{id:"clear-all-listeners-for-an-event"},"Clear all listeners for an event"),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"JavaScript")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"SecondScreen.clear('launchRequest')\n"))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"closerequest"},"closeRequest"),(0,r.kt)("p",null,"Listen to the closeRequest event"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// listen to closeRequest\nSecondScreen.listen('closeRequest', (data: SecondScreenEvent) => void): Promise<bigint>\n\n// listen to closeRequest once\nSecondScreen.once('closeRequest', (data: SecondScreenEvent) => void): Promise<bigint>\n\n// clear a listener\nSecondScreen.clear(listenerId?: bigint): void\n\n")),(0,r.kt)("h4",{id:"event-value-1"},"Event value"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"../schemas/secondscreen#/definitions/secondscreenevent"},(0,r.kt)("inlineCode",{parentName:"a"},"SecondScreenEvent"))),(0,r.kt)("td",{parentName:"tr",align:null},"An a message notification from a second screen device")))),(0,r.kt)("h4",{id:"promise-resolution-1"},"Promise Resolution"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bigint")),(0,r.kt)("td",{parentName:"tr",align:null},"Listener ID to clear() the callback method and stop receiving the event, e.g. ",(0,r.kt)("inlineCode",{parentName:"td"},"SecondScreen.clear(id)"))))),(0,r.kt)("h4",{id:"examples-1"},"Examples"),(0,r.kt)("h5",{id:"default-example-1"},"Default Example"),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"JavaScript")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { SecondScreen } from '@firebolt-js/sdk'\n\nSecondScreen.listen('closeRequest', closeRequestEvent => {\n  console.log(closeRequestEvent)\n})\n")),(0,r.kt)("p",null,"Value of ",(0,r.kt)("inlineCode",{parentName:"p"},"closeRequestEvent")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "dial",\n  "version": "1.7"\n}\n'))),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"JSON-RPC")),(0,r.kt)("h6",null,"Request"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "method": "secondscreen.onCloseRequest",\n  "params": {\n    "listen": true\n  }\n}\n')),(0,r.kt)("h6",null,"Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "result": {\n    "type": "dial",\n    "version": "1.7"\n  }\n}\n'))),(0,r.kt)("h5",{id:"listen-to-an-event-only-once-1"},"Listen to an event only once"),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"JavaScript")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"SecondScreen.listen('closeRequest', (value) => {\n  console.log(value)\n}).then( (listenerId) => {\n  SecondScreen.clear(listenerId)\n})\n")),(0,r.kt)("p",null,"Alternately, simply call ",(0,r.kt)("inlineCode",{parentName:"p"},"once()"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"SecondScreen.once('closeRequest', (value) => {\n  console.log(value)\n})\n"))),(0,r.kt)("h5",{id:"clear-all-listeners-for-an-event-1"},"Clear all listeners for an event"),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"JavaScript")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"SecondScreen.clear('closeRequest')\n"))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"protocols"},"protocols"),(0,r.kt)("p",null,"Get the supported second screen discovery protocols"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function protocols(): Promise<BooleanMap>\n")),(0,r.kt)("h4",{id:"promise-resolution-2"},"Promise Resolution"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"../schemas/types#/definitions/booleanmap"},(0,r.kt)("inlineCode",{parentName:"a"},"BooleanMap"))),(0,r.kt)("td",{parentName:"tr",align:null},"the supported protocols")))),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"examples-2"},"Examples"),(0,r.kt)("h5",{id:"default-example-2"},"Default Example"),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"JavaScript")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { SecondScreen } from '@firebolt-js/sdk'\n\nSecondScreen.protocols()\n    .then(protocols => {\n        console.log(protocols)\n    })\n")),(0,r.kt)("p",null,"Value of ",(0,r.kt)("inlineCode",{parentName:"p"},"protocols")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "dial1.7": true\n}\n'))),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"JSON-RPC")),(0,r.kt)("h6",{id:"request"},"Request"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "method": "secondscreen.protocols",\n  "params": {}\n}\n')),(0,r.kt)("h6",{id:"response"},"Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "result": {\n    "dial1.7": true\n  }\n}\n'))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"device"},"device"),(0,r.kt)("p",null,"Get the broadcasted id for the device"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function device(type?: string): Promise<string>\n")),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Summary"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"type")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},'The type of second screen protocol, e.g. "dial"')))),(0,r.kt)("h4",{id:"promise-resolution-3"},"Promise Resolution"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"the device id")))),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"examples-3"},"Examples"),(0,r.kt)("h5",{id:"default-example-3"},"Default Example"),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"JavaScript")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { SecondScreen } from '@firebolt-js/sdk'\n\nSecondScreen.device(null)\n    .then(deviceId => {\n        console.log(deviceId)\n    })\n")),(0,r.kt)("p",null,"Value of ",(0,r.kt)("inlineCode",{parentName:"p"},"deviceId")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'"device-id"\n'))),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"JSON-RPC")),(0,r.kt)("h6",{id:"request-1"},"Request"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "method": "secondscreen.device",\n  "params": {}\n}\n')),(0,r.kt)("h6",{id:"response-1"},"Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "result": "device-id"\n}\n'))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"friendlyname"},"friendlyName"),(0,r.kt)("p",null,"Get the broadcasted friendly name for the device"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function friendlyName(type?: string): Promise<string>\n")),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Summary"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"type")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},'The type of second screen protocol, e.g. "dial"')))),(0,r.kt)("h4",{id:"promise-resolution-4"},"Promise Resolution"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"the device friendly-name")))),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"examples-4"},"Examples"),(0,r.kt)("h5",{id:"default-example-4"},"Default Example"),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"JavaScript")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { SecondScreen } from '@firebolt-js/sdk'\n\nSecondScreen.friendlyName(null)\n    .then(friendlyName => {\n        console.log(friendlyName)\n    })\n")),(0,r.kt)("p",null,"Value of ",(0,r.kt)("inlineCode",{parentName:"p"},"friendlyName")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'"Living Room"\n'))),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"JSON-RPC")),(0,r.kt)("h6",{id:"request-2"},"Request"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "method": "secondscreen.friendlyName",\n  "params": {}\n}\n')),(0,r.kt)("h6",{id:"response-2"},"Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "result": "Living Room"\n}\n'))),(0,r.kt)("hr",null))}m.isMDXComponent=!0}}]);