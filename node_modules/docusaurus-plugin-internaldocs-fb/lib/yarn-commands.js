"use strict";
/**
 * (c) Meta Platforms, Inc. and affiliates. Confidential and proprietary.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.authenticate = exports.passthrough = exports.startServer = exports.doBuild = void 0;
const child_process_1 = __importDefault(require("child_process"));
const auth_1 = require("./auth");
const INHERIT = 'inherit';
function doBuild() {
    fbInternalYarnCommand(['build']);
}
exports.doBuild = doBuild;
function startServer() {
    fbInternalYarnCommand(['start']);
}
exports.startServer = startServer;
function passthrough(...args) {
    fbInternalYarnCommand(args);
}
exports.passthrough = passthrough;
function fbInternalYarnCommand(args) {
    const options = {
        stdio: INHERIT,
        env: {
            ...process.env,
            'FB_INTERNAL': '1',
            'HTTP_PROXY': 'http://fwdproxy:8080',
            'HTTPS_PROXY': 'http://fwdproxy:8080'
        },
    };
    child_process_1.default.spawnSync('yarn', args, options);
}
function authenticate(args) {
    if (args.length != 1) {
        // When run without token, point them to the oauth URL.
        // TODO maybe use `open` to open it automatically? (probably wont work on ODs?)
        console.log(`

Please visit this page to authenticate: ${(0, auth_1.getAuthUrl)()}

`);
        return;
    }
    // When run with a token arg, store it.
    const token = args[0];
    (0, auth_1.storeToken)(token);
}
exports.authenticate = authenticate;
